name: Playwright - AI Test Summary Analyzer
on:
  pull_request:
    branches: [ main, fix/* ]

  workflow_dispatch:

jobs:
  test:
    permissions:
      contents: write
      pull-requests: write
      pages: write
      id-token: write
     
    timeout-minutes: 60
    runs-on: ubuntu-latest
    continue-on-error: true
   

    steps:
    - name: checkout repo
      uses: actions/checkout@v4

    - name: setup node
      uses: actions/setup-node@v4
      with:
        node-version: 20

    - name: Cache Node Modules
      id: cache-node-modules
      uses: actions/cache@v4
      with:
        path: |
          node_modules
        key: modules-${{ hashFiles('package-lock.json') }}
    
    - name: Cache Playwright Binaries
      id: cache-playwright
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/ms-playwright
        key: playwright-${{ hashFiles('package-lock.json') }}

    - name: Install dependencies
      id: install-dependencies
      if: steps.cache-node-modules.outputs.cache-hit != 'true'
      run: npm ci

    - name: Install Playwright Browsers
      id: install-playwright-browsers
      if: steps.cache-playwright.outputs.cache-hit != 'true'
      run: npx playwright install --with-deps

    - name: Run Playwright tests
      continue-on-error: false
      run: |
        npx playwright test --grep="@basic" --project=chromium
       
    - name: Run the AI analyzer
      if: failure() || success()
      continue-on-error: true
      run: |
        npm run ai:analyze
        cat summary.txt
      env: 
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
  
    - uses: mshick/add-pr-comment@v2
      if: (failure() || success()) 
      with:
          message: |
            **Howdie!**
          message-failure: |
            Build status

    - name: Setup Pages
      if: failure()
      uses: actions/configure-pages@v5  

    - name: Upload Artifact
      if: failure()
      uses: actions/upload-pages-artifact@v3
      with:
        path: "./playwright-report"
    
    - id: deploy
      if: failure()
      run: echo "flag=true" >> $GITHUB_OUTPUT

    outputs:
      deployFlag: ${{ steps.deploy.outputs.flag }}

  deploy: 
    needs: test

    permissions: 
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    if: needs.test.outputs.deployFlag == 'true'
    runs-on: ubuntu-latest
    steps:
          - name: Deploy to GitHub Pages
            id: deployment
            uses: actions/deploy-pages@v4
    
  

          
